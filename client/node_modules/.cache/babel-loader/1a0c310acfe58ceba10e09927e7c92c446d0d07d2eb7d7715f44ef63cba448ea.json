{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { exerciseApi } from '../../services/api';\nconst initialState = {\n  exercises: [],\n  currentExercise: null,\n  loading: false,\n  error: null\n};\nexport const fetchExercises = createAsyncThunk('exercise/fetchExercises', async () => {\n  const response = await exerciseApi.getExercises();\n  return response;\n});\nexport const fetchExerciseById = createAsyncThunk('exercise/fetchExerciseById', async id => {\n  const response = await exerciseApi.getExercise(id);\n  return response;\n});\nconst exerciseSlice = createSlice({\n  name: 'exercise',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentExercise: state => {\n      state.currentExercise = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchExercises.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchExercises.fulfilled, (state, action) => {\n      state.loading = false;\n      state.exercises = action.payload;\n    }).addCase(fetchExercises.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch exercises';\n    }).addCase(fetchExerciseById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchExerciseById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentExercise = action.payload;\n    }).addCase(fetchExerciseById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch exercise';\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCurrentExercise\n} = exerciseSlice.actions;\nexport default exerciseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","exerciseApi","initialState","exercises","currentExercise","loading","error","fetchExercises","response","getExercises","fetchExerciseById","id","getExercise","exerciseSlice","name","reducers","clearError","state","clearCurrentExercise","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["C:/Users/User/Documents/repos/ProcurementPortal/client/src/store/slices/exerciseSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Exercise } from '../../types/api';\r\nimport { exerciseApi } from '../../services/api';\r\n\r\ninterface ExerciseState {\r\n  exercises: Exercise[];\r\n  currentExercise: Exercise | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: ExerciseState = {\r\n  exercises: [],\r\n  currentExercise: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const fetchExercises = createAsyncThunk(\r\n  'exercise/fetchExercises',\r\n  async () => {\r\n    const response = await exerciseApi.getExercises();\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const fetchExerciseById = createAsyncThunk(\r\n  'exercise/fetchExerciseById',\r\n  async (id: string) => {\r\n    const response = await exerciseApi.getExercise(id);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst exerciseSlice = createSlice({\r\n  name: 'exercise',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    clearCurrentExercise: (state) => {\r\n      state.currentExercise = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchExercises.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchExercises.fulfilled, (state, action: PayloadAction<Exercise[]>) => {\r\n        state.loading = false;\r\n        state.exercises = action.payload;\r\n      })\r\n      .addCase(fetchExercises.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || 'Failed to fetch exercises';\r\n      })\r\n      .addCase(fetchExerciseById.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchExerciseById.fulfilled, (state, action: PayloadAction<Exercise>) => {\r\n        state.loading = false;\r\n        state.currentExercise = action.payload;\r\n      })\r\n      .addCase(fetchExerciseById.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || 'Failed to fetch exercise';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, clearCurrentExercise } = exerciseSlice.actions;\r\nexport default exerciseSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAE/E,SAASC,WAAW,QAAQ,oBAAoB;AAShD,MAAMC,YAA2B,GAAG;EAClCC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC5C,yBAAyB,EACzB,YAAY;EACV,MAAMQ,QAAQ,GAAG,MAAMP,WAAW,CAACQ,YAAY,CAAC,CAAC;EACjD,OAAOD,QAAQ;AACjB,CACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAGV,gBAAgB,CAC/C,4BAA4B,EAC5B,MAAOW,EAAU,IAAK;EACpB,MAAMH,QAAQ,GAAG,MAAMP,WAAW,CAACW,WAAW,CAACD,EAAE,CAAC;EAClD,OAAOH,QAAQ;AACjB,CACF,CAAC;AAED,MAAMK,aAAa,GAAGd,WAAW,CAAC;EAChCe,IAAI,EAAE,UAAU;EAChBZ,YAAY;EACZa,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,oBAAoB,EAAGD,KAAK,IAAK;MAC/BA,KAAK,CAACb,eAAe,GAAG,IAAI;IAC9B;EACF,CAAC;EACDe,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,cAAc,CAACe,OAAO,EAAGL,KAAK,IAAK;MAC1CA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACd,cAAc,CAACgB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAiC,KAAK;MAC/EP,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACd,SAAS,GAAGqB,MAAM,CAACC,OAAO;IAClC,CAAC,CAAC,CACDJ,OAAO,CAACd,cAAc,CAACmB,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MACnDP,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,KAAK,GAAGkB,MAAM,CAAClB,KAAK,CAACqB,OAAO,IAAI,2BAA2B;IACnE,CAAC,CAAC,CACDN,OAAO,CAACX,iBAAiB,CAACY,OAAO,EAAGL,KAAK,IAAK;MAC7CA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACX,iBAAiB,CAACa,SAAS,EAAE,CAACN,KAAK,EAAEO,MAA+B,KAAK;MAChFP,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,eAAe,GAAGoB,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACX,iBAAiB,CAACgB,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MACtDP,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,KAAK,GAAGkB,MAAM,CAAClB,KAAK,CAACqB,OAAO,IAAI,0BAA0B;IAClE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,UAAU;EAAEE;AAAqB,CAAC,GAAGL,aAAa,CAACe,OAAO;AACzE,eAAef,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}